// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package overlay;


message Bridge {
  // IP in CIDR format allocated to this bridge. The bridge will act
  // as a gateway for all containers associated with it.
  required string ip = 1;

  // A canonical name for the bridge. Will be used to configure the
  // bridge device.
  required string name = 2;
}


message VTEP {
  // The IP address associated with a given VTEP.
  required string ip = 1;

  // The MAC address associated with a given MAC.
  required string mac = 2;

  // The device name for this VTEP.
  required string name = 3;
}


message VxLAN {
  required uint32 VNI = 1;
  required VTEP vtep = 2;
}


// The different backends that can be used to transport packets from
// a given Overlay.
message Backend {
  optional VxLAN vxlan = 1;
}


// There can be multiple overlay networks that exist simultaneously.
// This message defines the canonical name of a specific overlay
// network and the subnet allocated to the overlay.
message Network {
  // Canonical name of the Overlay.
  required string name = 1;

  // Subnet associated with this overlay.
  required string subnet = 2;
}


// This message defines the properties of an overlay network
// that exist on an Agent.
message AgentNetwork {
  // The overlay to which this instance belongs.
  required Network network = 1;

  // The subnet of the overlay that is associated with this Agent.
  // NOTE: This subnet should be a subset of the `overlay` subnet.
  required string subnet = 2;

  // The bridges on the Agent which will be used to support this
  // `Overlay` instance on the Agent.
  repeated Bridge bridges = 3;

  // The VTEP used to tunnel ingress and egress traffic to this
  // overlay.
  required Backend backend = 4;
}


message Agent {
  // The IP address of the agent.
  required string ip = 1;

  // The overlay networks that exist on this Agent.
  repeated AgentNetwork networks = 2;
}


message State {
  // The overlay networks that can exist in the cluster.
  repeated Network networks = 1;

  // Agents that run an instance of the overlay networks. On each
  // Agent there can be at most one instance of each overlay network.
  repeated Agent agents = 2;
}
