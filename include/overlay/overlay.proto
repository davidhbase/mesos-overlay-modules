/**
 * This file is © 2014 Mesosphere, Inc. (“Mesosphere”). Mesosphere
 * licenses this file to you solely pursuant to the following terms
 * (and you may not use this file except in compliance with such
 * terms):
 *
 * 1) Subject to your compliance with the following terms, Mesosphere
 * hereby grants you a nonexclusive, limited, personal,
 * non-sublicensable, non-transferable, royalty-free license to use
 * this file solely for your internal business purposes.
 *
 * 2) You may not (and agree not to, and not to authorize or enable
 * others to), directly or indirectly:
 *   (a) copy, distribute, rent, lease, timeshare, operate a service
 *   bureau, or otherwise use for the benefit of a third party, this
 *   file; or
 *
 *   (b) remove any proprietary notices from this file.  Except as
 *   expressly set forth herein, as between you and Mesosphere,
 *   Mesosphere retains all right, title and interest in and to this
 *   file.
 *
 * 3) Unless required by applicable law or otherwise agreed to in
 * writing, Mesosphere provides this file on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,
 * including, without limitation, any warranties or conditions of
 * TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
 * PARTICULAR PURPOSE.
 *
 * 4) In no event and under no legal theory, whether in tort (including
 * negligence), contract, or otherwise, unless required by applicable
 * law (such as deliberate and grossly negligent acts) or agreed to in
 * writing, shall Mesosphere be liable to you for damages, including
 * any direct, indirect, special, incidental, or consequential damages
 * of any character arising as a result of these terms or out of the
 * use or inability to use this file (including but not limited to
 * damages for loss of goodwill, work stoppage, computer failure or
 * malfunction, or any and all other commercial damages or losses),
 * even if Mesosphere has been advised of the possibility of such
 * damages.
 */

package mesos.modules.overlay;


message BridgeInfo {
  // IP in CIDR format allocated to this bridge. The bridge will act
  // as a gateway for all containers associated with it.
  required string ip = 1;

  // A canonical name for the bridge. Will be used to configure the
  // bridge device.
  required string name = 2;
}


message VxLANInfo {
  required uint32 vni = 1;
  required string vtep_name = 2;
  required string vtep_ip = 3;
  required string vtep_mac = 4;
}


// The different backends that can be used to transport packets from
// a given Overlay.
message BackendInfo {
  optional VxLANInfo vxlan = 1;
}


// There can be multiple overlay networks that exist simultaneously.
// This message contains the canonical name of a specific overlay
// network and the subnet allocated to the overlay.
message OverlayInfo {
  // Canonical name of the Overlay.
  required string name = 1;

  // Subnet associated with this overlay.
  required string subnet = 2;
}


// This message defines the properties of an overlay network
// that exist on an Agent.
message AgentNetworkInfo {
  // The overlay to which this instance belongs.
  required OverlayInfo info = 1;

  // The subnet of the overlay that is associated with this Agent.
  // NOTE: This subnet should be a subset of the `overlay` subnet.
  required string subnet = 2;

  // The bridges which will be used to support this
  // `Overlay` instance on this Agent.
  repeated BridgeInfo bridges = 3;

  // The VTEP used to tunnel ingress and egress traffic to this
  // overlay.
  required BackendInfo backend = 4;
}


message AgentInfo {
  // The IP address of the agent.
  required string ip = 1;

  // The overlay networks that exist on this AgentInfo.
  repeated AgentNetworkInfo networks = 2;
}


message State {
  // The overlay networks that exist in the cluster.
  repeated OverlayInfo overlays = 1;

  // Agent that run an instance of the overlay networks. On each
  // Agent there can be at most one instance of each overlay network.
  repeated AgentInfo agents = 2;
}
